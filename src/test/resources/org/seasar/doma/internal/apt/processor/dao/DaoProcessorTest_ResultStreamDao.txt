package org.seasar.doma.internal.apt.processor.dao;

/** */
@javax.annotation.Generated(value = { "Doma", "@VERSION@" }, date = "1970-01-01T09:00:00.000+0900")
public class ResultStreamDaoImpl extends org.seasar.doma.internal.jdbc.dao.AbstractDao implements org.seasar.doma.internal.apt.processor.dao.ResultStreamDao {

    static {
        org.seasar.doma.internal.Artifact.validateVersion("@VERSION@");
    }

    private static final java.lang.reflect.Method __method0 = org.seasar.doma.internal.jdbc.dao.AbstractDao.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.ResultStreamDao.class, "selectByIdAndName", java.lang.Integer.class, java.lang.String.class);

    private static final java.lang.reflect.Method __method1 = org.seasar.doma.internal.jdbc.dao.AbstractDao.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.ResultStreamDao.class, "selectById", java.lang.Integer.class);

    private static final java.lang.reflect.Method __method2 = org.seasar.doma.internal.jdbc.dao.AbstractDao.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.ResultStreamDao.class, "select");

    private static final java.lang.reflect.Method __method3 = org.seasar.doma.internal.jdbc.dao.AbstractDao.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.ResultStreamDao.class, "selectByIdAsMap", java.lang.Integer.class);

    /** */
    public ResultStreamDaoImpl() {
        super(new org.seasar.doma.internal.apt.processor.dao.MyConfig());
    }

    /**
     * @param connection the connection
     */
    public ResultStreamDaoImpl(java.sql.Connection connection) {
        super(new org.seasar.doma.internal.apt.processor.dao.MyConfig(), connection);
    }

    /**
     * @param dataSource the dataSource
     */
    public ResultStreamDaoImpl(javax.sql.DataSource dataSource) {
        super(new org.seasar.doma.internal.apt.processor.dao.MyConfig(), dataSource);
    }

    /**
     * @param config the configuration
     */
    protected ResultStreamDaoImpl(org.seasar.doma.jdbc.Config config) {
        super(config);
    }

    /**
     * @param config the configuration
     * @param connection the connection
     */
    protected ResultStreamDaoImpl(org.seasar.doma.jdbc.Config config, java.sql.Connection connection) {
        super(config, connection);
    }

    /**
     * @param config the configuration
     * @param dataSource the dataSource
     */
    protected ResultStreamDaoImpl(org.seasar.doma.jdbc.Config config, javax.sql.DataSource dataSource) {
        super(config, dataSource);
    }

    @Override
    public java.util.stream.Stream<org.seasar.doma.internal.apt.processor.entity.Emp> selectByIdAndName(java.lang.Integer id, java.lang.String name) {
        entering("org.seasar.doma.internal.apt.processor.dao.ResultStreamDaoImpl", "selectByIdAndName", id, name);
        try {
            org.seasar.doma.jdbc.query.SqlFileSelectQuery __query = getQueryImplementors().createSqlFileSelectQuery(__method0);
            __query.setMethod(__method0);
            __query.setConfig(__config);
            __query.setSqlFilePath("META-INF/org/seasar/doma/internal/apt/processor/dao/ResultStreamDao/selectByIdAndName.sql");
            __query.setEntityType(org.seasar.doma.internal.apt.processor.entity._Emp.getSingletonInternal());
            __query.addParameter("id", java.lang.Integer.class, id);
            __query.addParameter("name", java.lang.String.class, name);
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.ResultStreamDaoImpl");
            __query.setCallerMethodName("selectByIdAndName");
            __query.setResultEnsured(false);
            __query.setResultMappingEnsured(false);
            __query.setFetchType(org.seasar.doma.FetchType.LAZY);
            __query.setQueryTimeout(-1);
            __query.setMaxRows(-1);
            __query.setFetchSize(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.setResultStream(true);
            __query.prepare();
            org.seasar.doma.jdbc.command.SelectCommand<java.util.stream.Stream<org.seasar.doma.internal.apt.processor.entity.Emp>> __command = getCommandImplementors().createSelectCommand(__method0, __query, new org.seasar.doma.internal.jdbc.command.EntityStreamHandler<org.seasar.doma.internal.apt.processor.entity.Emp, java.util.stream.Stream<org.seasar.doma.internal.apt.processor.entity.Emp>>(org.seasar.doma.internal.apt.processor.entity._Emp.getSingletonInternal(), java.util.function.Function.identity()));
            java.util.stream.Stream<org.seasar.doma.internal.apt.processor.entity.Emp> __result = __command.execute();
            __query.complete();
            exiting("org.seasar.doma.internal.apt.processor.dao.ResultStreamDaoImpl", "selectByIdAndName", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            throwing("org.seasar.doma.internal.apt.processor.dao.ResultStreamDaoImpl", "selectByIdAndName", __e);
            throw __e;
        }
    }

    @Override
    public java.util.stream.Stream<example.domain.PhoneNumber> selectById(java.lang.Integer id) {
        entering("org.seasar.doma.internal.apt.processor.dao.ResultStreamDaoImpl", "selectById", id);
        try {
            org.seasar.doma.jdbc.query.SqlFileSelectQuery __query = getQueryImplementors().createSqlFileSelectQuery(__method1);
            __query.setMethod(__method1);
            __query.setConfig(__config);
            __query.setSqlFilePath("META-INF/org/seasar/doma/internal/apt/processor/dao/ResultStreamDao/selectById.sql");
            __query.addParameter("id", java.lang.Integer.class, id);
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.ResultStreamDaoImpl");
            __query.setCallerMethodName("selectById");
            __query.setResultEnsured(false);
            __query.setResultMappingEnsured(false);
            __query.setFetchType(org.seasar.doma.FetchType.LAZY);
            __query.setQueryTimeout(-1);
            __query.setMaxRows(-1);
            __query.setFetchSize(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.setResultStream(true);
            __query.prepare();
            org.seasar.doma.jdbc.command.SelectCommand<java.util.stream.Stream<example.domain.PhoneNumber>> __command = getCommandImplementors().createSelectCommand(__method1, __query, new org.seasar.doma.internal.jdbc.command.DomainStreamHandler<java.lang.String, example.domain.PhoneNumber, java.util.stream.Stream<example.domain.PhoneNumber>>(example.domain._PhoneNumber.getSingletonInternal(), java.util.function.Function.identity()));
            java.util.stream.Stream<example.domain.PhoneNumber> __result = __command.execute();
            __query.complete();
            exiting("org.seasar.doma.internal.apt.processor.dao.ResultStreamDaoImpl", "selectById", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            throwing("org.seasar.doma.internal.apt.processor.dao.ResultStreamDaoImpl", "selectById", __e);
            throw __e;
        }
    }

    @Override
    public java.util.stream.Stream<java.lang.String> select() {
        entering("org.seasar.doma.internal.apt.processor.dao.ResultStreamDaoImpl", "select");
        try {
            org.seasar.doma.jdbc.query.SqlFileSelectQuery __query = getQueryImplementors().createSqlFileSelectQuery(__method2);
            __query.setMethod(__method2);
            __query.setConfig(__config);
            __query.setSqlFilePath("META-INF/org/seasar/doma/internal/apt/processor/dao/ResultStreamDao/select.sql");
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.ResultStreamDaoImpl");
            __query.setCallerMethodName("select");
            __query.setResultEnsured(false);
            __query.setResultMappingEnsured(false);
            __query.setFetchType(org.seasar.doma.FetchType.LAZY);
            __query.setQueryTimeout(-1);
            __query.setMaxRows(-1);
            __query.setFetchSize(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.setResultStream(true);
            __query.prepare();
            org.seasar.doma.jdbc.command.SelectCommand<java.util.stream.Stream<java.lang.String>> __command = getCommandImplementors().createSelectCommand(__method2, __query, new org.seasar.doma.internal.jdbc.command.BasicStreamHandler<java.lang.String, java.util.stream.Stream<java.lang.String>>(org.seasar.doma.wrapper.StringWrapper::new, java.util.function.Function.identity()));
            java.util.stream.Stream<java.lang.String> __result = __command.execute();
            __query.complete();
            exiting("org.seasar.doma.internal.apt.processor.dao.ResultStreamDaoImpl", "select", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            throwing("org.seasar.doma.internal.apt.processor.dao.ResultStreamDaoImpl", "select", __e);
            throw __e;
        }
    }

    @Override
    public java.util.stream.Stream<java.util.Map<java.lang.String, java.lang.Object>> selectByIdAsMap(java.lang.Integer id) {
        entering("org.seasar.doma.internal.apt.processor.dao.ResultStreamDaoImpl", "selectByIdAsMap", id);
        try {
            org.seasar.doma.jdbc.query.SqlFileSelectQuery __query = getQueryImplementors().createSqlFileSelectQuery(__method3);
            __query.setMethod(__method3);
            __query.setConfig(__config);
            __query.setSqlFilePath("META-INF/org/seasar/doma/internal/apt/processor/dao/ResultStreamDao/selectByIdAsMap.sql");
            __query.addParameter("id", java.lang.Integer.class, id);
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.ResultStreamDaoImpl");
            __query.setCallerMethodName("selectByIdAsMap");
            __query.setResultEnsured(false);
            __query.setResultMappingEnsured(false);
            __query.setFetchType(org.seasar.doma.FetchType.LAZY);
            __query.setQueryTimeout(-1);
            __query.setMaxRows(-1);
            __query.setFetchSize(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.setResultStream(true);
            __query.prepare();
            org.seasar.doma.jdbc.command.SelectCommand<java.util.stream.Stream<java.util.Map<java.lang.String, java.lang.Object>>> __command = getCommandImplementors().createSelectCommand(__method3, __query, new org.seasar.doma.internal.jdbc.command.MapStreamHandler<java.util.stream.Stream<java.util.Map<java.lang.String, java.lang.Object>>>(org.seasar.doma.MapKeyNamingType.CAMEL_CASE, java.util.function.Function.identity()));
            java.util.stream.Stream<java.util.Map<java.lang.String, java.lang.Object>> __result = __command.execute();
            __query.complete();
            exiting("org.seasar.doma.internal.apt.processor.dao.ResultStreamDaoImpl", "selectByIdAsMap", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            throwing("org.seasar.doma.internal.apt.processor.dao.ResultStreamDaoImpl", "selectByIdAsMap", __e);
            throw __e;
        }
    }

}
