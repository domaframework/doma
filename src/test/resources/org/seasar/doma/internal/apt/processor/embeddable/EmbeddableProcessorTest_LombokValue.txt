package org.seasar.doma.internal.apt.processor.embeddable;

/** */
@javax.annotation.Generated(value = { "Doma", "@VERSION@" }, date = "1970-01-01T09:00:00.000+0900")
public final class _LombokValue implements org.seasar.doma.jdbc.entity.EmbeddableType<org.seasar.doma.internal.apt.processor.embeddable.LombokValue> {

    static {
        org.seasar.doma.internal.Artifact.validateVersion("@VERSION@");
    }

    private static final _LombokValue __singleton = new _LombokValue();

    @Override
    public <ENTITY> java.util.List<org.seasar.doma.jdbc.entity.EntityPropertyType<ENTITY, ?>> getEmbeddablePropertyTypes(String embeddedPropertyName, Class<ENTITY> entityClass, org.seasar.doma.jdbc.entity.NamingType namingType) {
        return java.util.Arrays.asList(
            new org.seasar.doma.jdbc.entity.DefaultPropertyType<ENTITY, java.lang.String, java.lang.String>(entityClass, () -> new org.seasar.doma.internal.jdbc.scalar.BasicScalar<>(org.seasar.doma.wrapper.StringWrapper::new), embeddedPropertyName + ".street", "", namingType, true, true, false),
            new org.seasar.doma.jdbc.entity.DefaultPropertyType<ENTITY, java.lang.String, java.lang.String>(entityClass, () -> new org.seasar.doma.internal.jdbc.scalar.BasicScalar<>(org.seasar.doma.wrapper.StringWrapper::new), embeddedPropertyName + ".city", "", namingType, true, true, false));
    }

    @Override
    public <ENTITY> org.seasar.doma.internal.apt.processor.embeddable.LombokValue newEmbeddable(String embeddedPropertyName, java.util.Map<String, org.seasar.doma.jdbc.entity.Property<ENTITY, ?>> __args) {
        return new org.seasar.doma.internal.apt.processor.embeddable.LombokValue(
            (java.lang.String)(__args.get(embeddedPropertyName + ".street") != null ? __args.get(embeddedPropertyName + ".street").get() : null),
            (java.lang.String)(__args.get(embeddedPropertyName + ".city") != null ? __args.get(embeddedPropertyName + ".city").get() : null));
    }

    /**
     * @return the singleton
     */
    public static _LombokValue getSingletonInternal() {
        return __singleton;
    }

}
