package org.seasar.doma.internal.apt.processor.dao;

/** */
@javax.annotation.Generated(value = { "Doma", "@VERSION@" }, date = "1970-01-01T09:00:00.000+0900")
public class FunctionDaoImpl extends org.seasar.doma.internal.jdbc.dao.AbstractDao implements org.seasar.doma.internal.apt.processor.dao.FunctionDao {

    static {
        org.seasar.doma.internal.Artifact.validateVersion("@VERSION@");
    }

    private static final java.lang.reflect.Method __method0 = org.seasar.doma.internal.jdbc.dao.AbstractDao.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.FunctionDao.class, "execute", int.class);

    private static final java.lang.reflect.Method __method1 = org.seasar.doma.internal.jdbc.dao.AbstractDao.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.FunctionDao.class, "execute", org.seasar.doma.internal.apt.processor.dao.Age.class, org.seasar.doma.jdbc.Reference.class, org.seasar.doma.jdbc.Reference.class);

    private static final java.lang.reflect.Method __method2 = org.seasar.doma.internal.jdbc.dao.AbstractDao.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.FunctionDao.class, "execute", java.util.Optional.class, org.seasar.doma.jdbc.Reference.class, org.seasar.doma.jdbc.Reference.class);

    private static final java.lang.reflect.Method __method3 = org.seasar.doma.internal.jdbc.dao.AbstractDao.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.FunctionDao.class, "execute", java.util.List.class);

    private static final java.lang.reflect.Method __method4 = org.seasar.doma.internal.jdbc.dao.AbstractDao.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.FunctionDao.class, "execute", java.util.List.class, java.util.Optional.class);

    /** */
    public FunctionDaoImpl() {
        super(new org.seasar.doma.internal.apt.processor.dao.MyConfig());
    }

    /**
     * @param connection the connection
     */
    public FunctionDaoImpl(java.sql.Connection connection) {
        super(new org.seasar.doma.internal.apt.processor.dao.MyConfig(), connection);
    }

    /**
     * @param dataSource the dataSource
     */
    public FunctionDaoImpl(javax.sql.DataSource dataSource) {
        super(new org.seasar.doma.internal.apt.processor.dao.MyConfig(), dataSource);
    }

    /**
     * @param config the configuration
     */
    protected FunctionDaoImpl(org.seasar.doma.jdbc.Config config) {
        super(config);
    }

    /**
     * @param config the configuration
     * @param connection the connection
     */
    protected FunctionDaoImpl(org.seasar.doma.jdbc.Config config, java.sql.Connection connection) {
        super(config, connection);
    }

    /**
     * @param config the configuration
     * @param dataSource the dataSource
     */
    protected FunctionDaoImpl(org.seasar.doma.jdbc.Config config, javax.sql.DataSource dataSource) {
        super(config, dataSource);
    }

    @Override
    public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> execute(int id) {
        entering("org.seasar.doma.internal.apt.processor.dao.FunctionDaoImpl", "execute", id);
        try {
            org.seasar.doma.jdbc.query.AutoFunctionQuery<java.util.List<java.util.Map<java.lang.String, java.lang.Object>>> __query = getQueryImplementors().createAutoFunctionQuery(__method0);
            __query.setMethod(__method0);
            __query.setConfig(__config);
            __query.setCatalogName("");
            __query.setSchemaName("");
            __query.setFunctionName("execute");
            __query.setQuoteRequired(false);
            __query.setResultParameter(new org.seasar.doma.internal.jdbc.sql.MapResultListParameter(org.seasar.doma.MapKeyNamingType.CAMEL_CASE));
            __query.addParameter(new org.seasar.doma.internal.jdbc.sql.BasicInParameter<java.lang.Integer>(org.seasar.doma.wrapper.PrimitiveIntWrapper::new, id));
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.FunctionDaoImpl");
            __query.setCallerMethodName("execute");
            __query.setQueryTimeout(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.prepare();
            org.seasar.doma.jdbc.command.FunctionCommand<java.util.List<java.util.Map<java.lang.String, java.lang.Object>>> __command = getCommandImplementors().createFunctionCommand(__method0, __query);
            java.util.List<java.util.Map<java.lang.String, java.lang.Object>> __result = __command.execute();
            __query.complete();
            exiting("org.seasar.doma.internal.apt.processor.dao.FunctionDaoImpl", "execute", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            throwing("org.seasar.doma.internal.apt.processor.dao.FunctionDaoImpl", "execute", __e);
            throw __e;
        }
    }

    @Override
    public org.seasar.doma.internal.apt.processor.dao.Age execute(org.seasar.doma.internal.apt.processor.dao.Age arg1, org.seasar.doma.jdbc.Reference<org.seasar.doma.internal.apt.processor.dao.Age> arg2, org.seasar.doma.jdbc.Reference<org.seasar.doma.internal.apt.processor.dao.Age> arg3) {
        entering("org.seasar.doma.internal.apt.processor.dao.FunctionDaoImpl", "execute", arg1, arg2, arg3);
        try {
            if (arg2 == null) {
                throw new org.seasar.doma.DomaNullPointerException("arg2");
            }
            if (arg3 == null) {
                throw new org.seasar.doma.DomaNullPointerException("arg3");
            }
            org.seasar.doma.jdbc.query.AutoFunctionQuery<org.seasar.doma.internal.apt.processor.dao.Age> __query = getQueryImplementors().createAutoFunctionQuery(__method1);
            __query.setMethod(__method1);
            __query.setConfig(__config);
            __query.setCatalogName("");
            __query.setSchemaName("");
            __query.setFunctionName("execute");
            __query.setQuoteRequired(false);
            __query.setResultParameter(new org.seasar.doma.internal.jdbc.sql.DomainSingleResultParameter<java.lang.Integer, org.seasar.doma.internal.apt.processor.dao.Age>(org.seasar.doma.internal.apt.processor.dao._Age.getSingletonInternal()));
            __query.addParameter(new org.seasar.doma.internal.jdbc.sql.DomainInParameter<java.lang.Integer, org.seasar.doma.internal.apt.processor.dao.Age>(org.seasar.doma.internal.apt.processor.dao._Age.getSingletonInternal(), arg1));
            __query.addParameter(new org.seasar.doma.internal.jdbc.sql.DomainOutParameter<java.lang.Integer, org.seasar.doma.internal.apt.processor.dao.Age>(org.seasar.doma.internal.apt.processor.dao._Age.getSingletonInternal(), arg2));
            __query.addParameter(new org.seasar.doma.internal.jdbc.sql.DomainInOutParameter<java.lang.Integer, org.seasar.doma.internal.apt.processor.dao.Age>(org.seasar.doma.internal.apt.processor.dao._Age.getSingletonInternal(), arg3));
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.FunctionDaoImpl");
            __query.setCallerMethodName("execute");
            __query.setQueryTimeout(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.prepare();
            org.seasar.doma.jdbc.command.FunctionCommand<org.seasar.doma.internal.apt.processor.dao.Age> __command = getCommandImplementors().createFunctionCommand(__method1, __query);
            org.seasar.doma.internal.apt.processor.dao.Age __result = __command.execute();
            __query.complete();
            exiting("org.seasar.doma.internal.apt.processor.dao.FunctionDaoImpl", "execute", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            throwing("org.seasar.doma.internal.apt.processor.dao.FunctionDaoImpl", "execute", __e);
            throw __e;
        }
    }

    @Override
    public java.util.Optional<org.seasar.doma.internal.apt.processor.dao.Age> execute(java.util.Optional<org.seasar.doma.internal.apt.processor.dao.Age> arg1, org.seasar.doma.jdbc.Reference<java.util.Optional<org.seasar.doma.internal.apt.processor.dao.Age>> arg2, org.seasar.doma.jdbc.Reference<java.util.Optional<org.seasar.doma.internal.apt.processor.dao.Age>> arg3) {
        entering("org.seasar.doma.internal.apt.processor.dao.FunctionDaoImpl", "execute", arg1, arg2, arg3);
        try {
            if (arg1 == null) {
                throw new org.seasar.doma.DomaNullPointerException("arg1");
            }
            if (arg2 == null) {
                throw new org.seasar.doma.DomaNullPointerException("arg2");
            }
            if (arg3 == null) {
                throw new org.seasar.doma.DomaNullPointerException("arg3");
            }
            org.seasar.doma.jdbc.query.AutoFunctionQuery<java.util.Optional<org.seasar.doma.internal.apt.processor.dao.Age>> __query = getQueryImplementors().createAutoFunctionQuery(__method2);
            __query.setMethod(__method2);
            __query.setConfig(__config);
            __query.setCatalogName("");
            __query.setSchemaName("");
            __query.setFunctionName("execute");
            __query.setQuoteRequired(false);
            __query.setResultParameter(new org.seasar.doma.internal.jdbc.sql.OptionalDomainSingleResultParameter<java.lang.Integer, org.seasar.doma.internal.apt.processor.dao.Age>(org.seasar.doma.internal.apt.processor.dao._Age.getSingletonInternal()));
            __query.addParameter(new org.seasar.doma.internal.jdbc.sql.OptionalDomainInParameter<java.lang.Integer, org.seasar.doma.internal.apt.processor.dao.Age>(org.seasar.doma.internal.apt.processor.dao._Age.getSingletonInternal(), arg1));
            __query.addParameter(new org.seasar.doma.internal.jdbc.sql.OptionalDomainOutParameter<java.lang.Integer, org.seasar.doma.internal.apt.processor.dao.Age>(org.seasar.doma.internal.apt.processor.dao._Age.getSingletonInternal(), arg2));
            __query.addParameter(new org.seasar.doma.internal.jdbc.sql.OptionalDomainInOutParameter<java.lang.Integer, org.seasar.doma.internal.apt.processor.dao.Age>(org.seasar.doma.internal.apt.processor.dao._Age.getSingletonInternal(), arg3));
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.FunctionDaoImpl");
            __query.setCallerMethodName("execute");
            __query.setQueryTimeout(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.prepare();
            org.seasar.doma.jdbc.command.FunctionCommand<java.util.Optional<org.seasar.doma.internal.apt.processor.dao.Age>> __command = getCommandImplementors().createFunctionCommand(__method2, __query);
            java.util.Optional<org.seasar.doma.internal.apt.processor.dao.Age> __result = __command.execute();
            __query.complete();
            exiting("org.seasar.doma.internal.apt.processor.dao.FunctionDaoImpl", "execute", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            throwing("org.seasar.doma.internal.apt.processor.dao.FunctionDaoImpl", "execute", __e);
            throw __e;
        }
    }

    @Override
    public java.util.List<org.seasar.doma.internal.apt.processor.dao.Age> execute(java.util.List<org.seasar.doma.internal.apt.processor.dao.Age> arg1) {
        entering("org.seasar.doma.internal.apt.processor.dao.FunctionDaoImpl", "execute", arg1);
        try {
            if (arg1 == null) {
                throw new org.seasar.doma.DomaNullPointerException("arg1");
            }
            org.seasar.doma.jdbc.query.AutoFunctionQuery<java.util.List<org.seasar.doma.internal.apt.processor.dao.Age>> __query = getQueryImplementors().createAutoFunctionQuery(__method3);
            __query.setMethod(__method3);
            __query.setConfig(__config);
            __query.setCatalogName("");
            __query.setSchemaName("");
            __query.setFunctionName("execute");
            __query.setQuoteRequired(false);
            __query.setResultParameter(new org.seasar.doma.internal.jdbc.sql.DomainResultListParameter<java.lang.Integer, org.seasar.doma.internal.apt.processor.dao.Age>(org.seasar.doma.internal.apt.processor.dao._Age.getSingletonInternal()));
            __query.addParameter(new org.seasar.doma.internal.jdbc.sql.DomainListParameter<java.lang.Integer, org.seasar.doma.internal.apt.processor.dao.Age>(org.seasar.doma.internal.apt.processor.dao._Age.getSingletonInternal(), arg1, "arg1"));
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.FunctionDaoImpl");
            __query.setCallerMethodName("execute");
            __query.setQueryTimeout(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.prepare();
            org.seasar.doma.jdbc.command.FunctionCommand<java.util.List<org.seasar.doma.internal.apt.processor.dao.Age>> __command = getCommandImplementors().createFunctionCommand(__method3, __query);
            java.util.List<org.seasar.doma.internal.apt.processor.dao.Age> __result = __command.execute();
            __query.complete();
            exiting("org.seasar.doma.internal.apt.processor.dao.FunctionDaoImpl", "execute", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            throwing("org.seasar.doma.internal.apt.processor.dao.FunctionDaoImpl", "execute", __e);
            throw __e;
        }
    }

    @Override
    public java.util.List<java.util.Optional<org.seasar.doma.internal.apt.processor.dao.Age>> execute(java.util.List<java.util.Optional<org.seasar.doma.internal.apt.processor.dao.Age>> arg1, java.util.Optional<org.seasar.doma.internal.apt.processor.dao.Age> arg2) {
        entering("org.seasar.doma.internal.apt.processor.dao.FunctionDaoImpl", "execute", arg1, arg2);
        try {
            if (arg1 == null) {
                throw new org.seasar.doma.DomaNullPointerException("arg1");
            }
            if (arg2 == null) {
                throw new org.seasar.doma.DomaNullPointerException("arg2");
            }
            org.seasar.doma.jdbc.query.AutoFunctionQuery<java.util.List<java.util.Optional<org.seasar.doma.internal.apt.processor.dao.Age>>> __query = getQueryImplementors().createAutoFunctionQuery(__method4);
            __query.setMethod(__method4);
            __query.setConfig(__config);
            __query.setCatalogName("");
            __query.setSchemaName("");
            __query.setFunctionName("execute");
            __query.setQuoteRequired(false);
            __query.setResultParameter(new org.seasar.doma.internal.jdbc.sql.OptionalDomainResultListParameter<java.lang.Integer, org.seasar.doma.internal.apt.processor.dao.Age>(org.seasar.doma.internal.apt.processor.dao._Age.getSingletonInternal()));
            __query.addParameter(new org.seasar.doma.internal.jdbc.sql.OptionalDomainListParameter<java.lang.Integer, org.seasar.doma.internal.apt.processor.dao.Age>(org.seasar.doma.internal.apt.processor.dao._Age.getSingletonInternal(), arg1, "arg1"));
            __query.addParameter(new org.seasar.doma.internal.jdbc.sql.OptionalDomainInParameter<java.lang.Integer, org.seasar.doma.internal.apt.processor.dao.Age>(org.seasar.doma.internal.apt.processor.dao._Age.getSingletonInternal(), arg2));
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.FunctionDaoImpl");
            __query.setCallerMethodName("execute");
            __query.setQueryTimeout(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.prepare();
            org.seasar.doma.jdbc.command.FunctionCommand<java.util.List<java.util.Optional<org.seasar.doma.internal.apt.processor.dao.Age>>> __command = getCommandImplementors().createFunctionCommand(__method4, __query);
            java.util.List<java.util.Optional<org.seasar.doma.internal.apt.processor.dao.Age>> __result = __command.execute();
            __query.complete();
            exiting("org.seasar.doma.internal.apt.processor.dao.FunctionDaoImpl", "execute", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            throwing("org.seasar.doma.internal.apt.processor.dao.FunctionDaoImpl", "execute", __e);
            throw __e;
        }
    }

}
