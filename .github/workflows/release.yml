name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: false

env:
  JDK_DISTRIBUTION: zulu
  JDK_VERSION_LATEST_LTS: 21

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 30
 
    steps:
      - name: Assign input version
        if: github.event.inputs.version != null
        run: echo "RELEASE_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV

      - uses: actions/github-script@v7
        if: github.event.inputs.version == null
        id: candidate-version
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          result-encoding: string
          script: |
            const list = await github.rest.repos.listReleases({
              owner: "domaframework",
              repo: "doma",
            });
            console.log(list)
            return list.data[0].name

      - name: Assign candidate version
        if: github.event.inputs.version == null
        run: echo "RELEASE_VERSION=${{ steps.candidate-version.outputs.result }}" >> $GITHUB_ENV

      - name: Set up the latest LTS JDK
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JDK_DISTRIBUTION }}
          java-version: ${{ env.JDK_VERSION_LATEST_LTS }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Prepare git config
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v3.4.2

      - name: Release ${{ env.RELEASE_VERSION }}
        run: >
          ./gradlew
          -Prelease.releaseVersion=${{ env.RELEASE_VERSION }}
          release

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: ./**/build/reports
