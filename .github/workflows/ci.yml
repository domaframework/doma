name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Set up the oldest JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 8

      - name: Prepare the oldest JDK env var
        shell: bash
        run: echo "JDK8=$JAVA_HOME" >> $GITHUB_ENV

      - name: Set up the latest JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Prepare the latest JDK env var
        shell: bash
        run: echo "JDK21=$JAVA_HOME" >> $GITHUB_ENV

      - name: Set up the latest LTS JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Checkout
        uses: actions/checkout@v4

      - name: Assemble and Check
        uses: gradle/gradle-build-action@v2.8.1
        with:
          arguments: javaToolchains assemble check

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: ./**/build/reports

  test:
    name: Test (${{ matrix.driver }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        driver: [h2, mysql, postgresql, sqlserver, oracle]
    timeout-minutes: 15

    steps:
      - name: Set up the oldest JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 8

      - name: Prepare the oldest JDK env var
        shell: bash
        run: echo "JDK8=$JAVA_HOME" >> $GITHUB_ENV

      - name: Set up the latest JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Prepare the latest JDK env var
        shell: bash
        run: echo "JDK21=$JAVA_HOME" >> $GITHUB_ENV

      - name: Set up the latest LTS JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Checkout
        uses: actions/checkout@v4

      - name: Test with the oldest JDK
        uses: gradle/gradle-build-action@v2.8.1
        with:
          arguments: |
            -Pdriver=${{ matrix.driver }}
            -PtestJavaLangVersion=8
            javaToolchains
            integration-test-java:test
            integration-test-kotlin:test

      - name: Test with the latest LTS JDK using JPMS
        uses: gradle/gradle-build-action@v2.8.1
        with:
          arguments: |
            -Pdriver=${{ matrix.driver }}
            -PtestJavaLangVersion=21
            -PtestUseModule=true
            javaToolchains
            integration-test-java:test
            integration-test-java-additional:test

      - name: Test with the latest JDK using JPMS
        uses: gradle/gradle-build-action@v2.8.1
        with:
          arguments: |
            -Pdriver=${{ matrix.driver }}
            -PtestJavaLangVersion=21
            -PtestUseModule=true
            javaToolchains
            integration-test-java:test
            integration-test-java-additional:test

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-${{ matrix.driver }}
          path: ./**/build/reports

  publish:
    if: github.event_name == 'push'
    name: Publish
    runs-on: ubuntu-latest
    needs: [ build, test ]
    timeout-minutes: 30

    steps:
      - name: Set up the oldest JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 8

      - name: Prepare the oldest JDK env var
        shell: bash
        run: echo "JDK8=$JAVA_HOME" >> $GITHUB_ENV

      - name: Set up the latest JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Prepare the latest JDK env var
        shell: bash
        run: echo "JDK21=$JAVA_HOME" >> $GITHUB_ENV

      - name: Set up the latest LTS JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Checkout
        uses: actions/checkout@v4

      - name: Publish packages
        uses: gradle/gradle-build-action@v2.8.1
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.OSSRH_PASSWORD }}
        with:
          arguments: javaToolchains publishToSonatype closeAndReleaseSonatypeStagingRepository

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: publish
          path: ./**/build/reports
