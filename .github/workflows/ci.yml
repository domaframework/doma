name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    if: contains(github.event.head_commit.message, '[skip build]') == false
    name: Build And Install
    runs-on: ubuntu-latest
    timeout-minutes: 30
    outputs:
      version: ${{ steps.set-version.outputs.version }}

    steps:
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 8

      - name: Prepare JDK8 env var
        shell: bash
        run: echo "JDK8=$JAVA_HOME" >> $GITHUB_ENV

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Checkout
        uses: actions/checkout@v2

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set version
        id: set-version
        run: ./gradlew properties | grep "^version:" | awk '{print $2}' | { read v; echo "::set-output name=version::$v"; }

      - name: Print version
        run: echo ${{ steps.set-version.outputs.version }}

      - name: Build and Install packages
        run: ./gradlew assemble check publishToMavenLocal -x signMavenPublication

      - name: Tar Maven Repository
        shell: bash
        run: tar -czf maven-repository.tgz -C ~ .m2/repository

      - name: Persist Maven Repository
        uses: actions/upload-artifact@v2
        with:
          name: maven-repository
          path: maven-repository.tgz

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: ./**/build/reports

  test:
    name: Test (Java${{ matrix.java }}, ${{ matrix.driver }})
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        java: [8, 17]
        driver: [h2, mysql, postgresql, sqlserver]
    timeout-minutes: 10

    steps:
      - name: Download Maven Repository
        uses: actions/download-artifact@v2
        with:
          name: maven-repository
          path: .

      - name: Extract Maven Repository
        shell: bash
        run: tar -xzf maven-repository.tgz -C ~

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: domaframework/doma-it

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Test
        run: ./gradlew ${{ matrix.driver }} -PdomaVersion=${{ needs.build.outputs.version }} -PenableAdditionalFeatures=true

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: java${{ matrix.java }}-${{ matrix.driver }}
          path: ./**/build/reports

  publish:
    if: github.event_name == 'push' && contains(github.event.head_commit.message, '[skip build]') == false
    name: Publish
    runs-on: ubuntu-latest
    needs: [ build, test ]

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Checkout
        uses: actions/checkout@v2

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Publish packages
        run: ./gradlew publish closeAndReleaseRepository
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.OSSRH_PASSWORD }}

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: publish
          path: ./**/build/reports
