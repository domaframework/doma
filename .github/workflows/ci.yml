name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 8

      - name: Prepare JDK8 env var
        shell: bash
        run: echo "JDK8=$JAVA_HOME" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Checkout
        uses: actions/checkout@v2

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Assemble and Check
        run: ./gradlew assemble check

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: ./**/build/reports

  test:
    name: Test (Java${{ matrix.java }}, ${{ matrix.driver }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        driver: [h2, mysql, postgresql, sqlserver]
    timeout-minutes: 10

    steps:
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 8

      - name: Prepare JDK8 env var
        shell: bash
        run: echo "JDK8=$JAVA_HOME" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Checkout
        uses: actions/checkout@v2

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Test with Java 8
        run: ./gradlew clean integration-test-java:test integration-test-kotlin:test -Pdriver=${{ matrix.driver }} -PtestJavaLangVersion=8

      - name: Test with Java 17 without JPMS
        run: ./gradlew clean integration-test-java:test integration-test-kotlin:test integration-test-java-latest:test -Pdriver=${{ matrix.driver }} -PtestJavaLangVersion=17

      - name: Test with Java 17 with JPMS
        run: ./gradlew clean integration-test-java:test integration-test-java-latest:test -Pdriver=${{ matrix.driver }} -PtestJavaLangVersion=17 -PtestUseModule=true
  
      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: java${{ matrix.java }}-${{ matrix.driver }}
          path: ./**/build/reports

  publish:
    if: github.event_name == 'push'
    name: Publish
    runs-on: ubuntu-latest
    needs: [ build, test ]
    timeout-minutes: 30

    steps:
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 8

      - name: Prepare JDK8 env var
        shell: bash
        run: echo "JDK8=$JAVA_HOME" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Checkout
        uses: actions/checkout@v2

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Publish packages
        run: ./gradlew publish closeAndReleaseRepository
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.OSSRH_PASSWORD }}

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: publish
          path: ./**/build/reports
