name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle
    - name: Build with Gradle
      run: ./gradlew assemble check
    - name: Upload reports
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: reports
        path: |
          doma-core/build/reports
          doma-processor/build/reports
          test-criteria/build/reports
    - name: Publish packages
      if: "github.event_name == 'push'"
      run: ./gradlew publish
      env:
        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
        ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
        ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.OSSRH_USERNAME }}
        ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.OSSRH_PASSWORD }}
    - name: Run integaration test
      uses: benc-uk/workflow-dispatch@v1
      with:
        workflow: Java CI with Gradle
        repo: domaframework/doma-it
        ref: master
        token: ${{ secrets.WORKFLOW_DISPATCH_TOKEN }}
        inputs: |
          { "ref": "${{ github.sha }}",
            "pull_request_title": "${{ (github.event.pull_request && github.event.pull_request.title) || null }}",
            "pull_request_number": "${{ (github.event.pull_request && github.event.pull_request.number) || null }}",
            "pull_request_sha": "${{ (github.event.pull_request && github.event.pull_request.head.sha) || null }}",
            "message": "${{ (github.event.commits[0] && github.event.commits[0].message) || null }}" }
