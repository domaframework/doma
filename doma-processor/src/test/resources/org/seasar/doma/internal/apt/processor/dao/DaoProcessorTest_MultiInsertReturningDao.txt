package org.seasar.doma.internal.apt.processor.dao;

/** */
@javax.annotation.processing.Generated(value = { "Doma", "@VERSION@" }, date = "1970-01-01T09:00:00.000+0900")
@org.seasar.doma.DaoImplementation
public class MultiInsertReturningDaoImpl implements org.seasar.doma.internal.apt.processor.dao.MultiInsertReturningDao, org.seasar.doma.jdbc.ConfigProvider {

    static {
        org.seasar.doma.internal.Artifact.validateVersion("@VERSION@");
    }

    private static final java.lang.reflect.Method __method0 = org.seasar.doma.internal.jdbc.dao.DaoImplSupport.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.MultiInsertReturningDao.class, "insertMultipleThenReturnAll", java.util.List.class);

    private static final java.lang.reflect.Method __method1 = org.seasar.doma.internal.jdbc.dao.DaoImplSupport.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.MultiInsertReturningDao.class, "insertMultipleThenReturnOnlyId", java.util.List.class);

    private static final java.lang.reflect.Method __method2 = org.seasar.doma.internal.jdbc.dao.DaoImplSupport.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.MultiInsertReturningDao.class, "insertMultipleThenReturnExceptVersion", java.util.List.class);

    private final org.seasar.doma.internal.jdbc.dao.DaoImplSupport __support;

    /**
     * @param config the config
     */
    public MultiInsertReturningDaoImpl(org.seasar.doma.jdbc.Config config) {
        __support = new org.seasar.doma.internal.jdbc.dao.DaoImplSupport(config);
    }

    @Override
    public org.seasar.doma.jdbc.Config getConfig() {
        return __support.getConfig();
    }

    @Override
    public java.util.List<org.seasar.doma.internal.apt.processor.entity.Emp> insertMultipleThenReturnAll(java.util.List<org.seasar.doma.internal.apt.processor.entity.Emp> employees) {
        __support.entering("org.seasar.doma.internal.apt.processor.dao.MultiInsertReturningDaoImpl", "insertMultipleThenReturnAll", employees);
        try {
            if (employees == null) {
                throw new org.seasar.doma.DomaNullPointerException("employees");
            }
            org.seasar.doma.jdbc.query.AutoMultiInsertQuery<org.seasar.doma.internal.apt.processor.entity.Emp> __query = __support.getQueryImplementors().createAutoMultiInsertQuery(__method0, org.seasar.doma.internal.apt.processor.entity._Emp.getSingletonInternal());
            __query.setMethod(__method0);
            __query.setConfig(__support.getConfig());
            __query.setDuplicateKeyType(org.seasar.doma.jdbc.query.DuplicateKeyType.EXCEPTION);
            __query.setEntities(employees);
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.MultiInsertReturningDaoImpl");
            __query.setCallerMethodName("insertMultipleThenReturnAll");
            __query.setQueryTimeout(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.setIncludedPropertyNames();
            __query.setExcludedPropertyNames();
            __query.setDuplicateKeyNames();
            __query.setReturning(org.seasar.doma.jdbc.query.ReturningPropertyNames.of(java.util.List.of(), java.util.List.of()));
            __query.prepare();
            var __command = __support.getCommandImplementors().createInsertReturningCommand(__method0, __query, new org.seasar.doma.internal.jdbc.command.EntityResultListHandler<>(org.seasar.doma.internal.apt.processor.entity._Emp.getSingletonInternal()), java.util.Collections::emptyList);
            var __result = __command.execute();
            __query.complete();
            __support.exiting("org.seasar.doma.internal.apt.processor.dao.MultiInsertReturningDaoImpl", "insertMultipleThenReturnAll", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            __support.throwing("org.seasar.doma.internal.apt.processor.dao.MultiInsertReturningDaoImpl", "insertMultipleThenReturnAll", __e);
            throw __e;
        }
    }

    @Override
    public java.util.List<org.seasar.doma.internal.apt.processor.entity.Emp> insertMultipleThenReturnOnlyId(java.util.List<org.seasar.doma.internal.apt.processor.entity.Emp> employees) {
        __support.entering("org.seasar.doma.internal.apt.processor.dao.MultiInsertReturningDaoImpl", "insertMultipleThenReturnOnlyId", employees);
        try {
            if (employees == null) {
                throw new org.seasar.doma.DomaNullPointerException("employees");
            }
            org.seasar.doma.jdbc.query.AutoMultiInsertQuery<org.seasar.doma.internal.apt.processor.entity.Emp> __query = __support.getQueryImplementors().createAutoMultiInsertQuery(__method1, org.seasar.doma.internal.apt.processor.entity._Emp.getSingletonInternal());
            __query.setMethod(__method1);
            __query.setConfig(__support.getConfig());
            __query.setDuplicateKeyType(org.seasar.doma.jdbc.query.DuplicateKeyType.EXCEPTION);
            __query.setEntities(employees);
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.MultiInsertReturningDaoImpl");
            __query.setCallerMethodName("insertMultipleThenReturnOnlyId");
            __query.setQueryTimeout(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.setIncludedPropertyNames();
            __query.setExcludedPropertyNames();
            __query.setDuplicateKeyNames();
            __query.setReturning(org.seasar.doma.jdbc.query.ReturningPropertyNames.of(java.util.List.of("id"), java.util.List.of()));
            __query.prepare();
            var __command = __support.getCommandImplementors().createInsertReturningCommand(__method1, __query, new org.seasar.doma.internal.jdbc.command.EntityResultListHandler<>(org.seasar.doma.internal.apt.processor.entity._Emp.getSingletonInternal()), java.util.Collections::emptyList);
            var __result = __command.execute();
            __query.complete();
            __support.exiting("org.seasar.doma.internal.apt.processor.dao.MultiInsertReturningDaoImpl", "insertMultipleThenReturnOnlyId", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            __support.throwing("org.seasar.doma.internal.apt.processor.dao.MultiInsertReturningDaoImpl", "insertMultipleThenReturnOnlyId", __e);
            throw __e;
        }
    }

    @Override
    public java.util.List<org.seasar.doma.internal.apt.processor.entity.Emp> insertMultipleThenReturnExceptVersion(java.util.List<org.seasar.doma.internal.apt.processor.entity.Emp> employees) {
        __support.entering("org.seasar.doma.internal.apt.processor.dao.MultiInsertReturningDaoImpl", "insertMultipleThenReturnExceptVersion", employees);
        try {
            if (employees == null) {
                throw new org.seasar.doma.DomaNullPointerException("employees");
            }
            org.seasar.doma.jdbc.query.AutoMultiInsertQuery<org.seasar.doma.internal.apt.processor.entity.Emp> __query = __support.getQueryImplementors().createAutoMultiInsertQuery(__method2, org.seasar.doma.internal.apt.processor.entity._Emp.getSingletonInternal());
            __query.setMethod(__method2);
            __query.setConfig(__support.getConfig());
            __query.setDuplicateKeyType(org.seasar.doma.jdbc.query.DuplicateKeyType.EXCEPTION);
            __query.setEntities(employees);
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.MultiInsertReturningDaoImpl");
            __query.setCallerMethodName("insertMultipleThenReturnExceptVersion");
            __query.setQueryTimeout(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.setIncludedPropertyNames();
            __query.setExcludedPropertyNames();
            __query.setDuplicateKeyNames();
            __query.setReturning(org.seasar.doma.jdbc.query.ReturningPropertyNames.of(java.util.List.of(), java.util.List.of("version")));
            __query.prepare();
            var __command = __support.getCommandImplementors().createInsertReturningCommand(__method2, __query, new org.seasar.doma.internal.jdbc.command.EntityResultListHandler<>(org.seasar.doma.internal.apt.processor.entity._Emp.getSingletonInternal()), java.util.Collections::emptyList);
            var __result = __command.execute();
            __query.complete();
            __support.exiting("org.seasar.doma.internal.apt.processor.dao.MultiInsertReturningDaoImpl", "insertMultipleThenReturnExceptVersion", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            __support.throwing("org.seasar.doma.internal.apt.processor.dao.MultiInsertReturningDaoImpl", "insertMultipleThenReturnExceptVersion", __e);
            throw __e;
        }
    }

}
