package org.seasar.doma.internal.apt.processor.dao;

/** */
@javax.annotation.Generated(value = { "Doma", "@VERSION@" }, date = "1970-01-01T09:00:00.000+0900")
@org.seasar.doma.DaoImplementation
public class IncludeAndExcludeDaoImpl implements org.seasar.doma.internal.apt.processor.dao.IncludeAndExcludeDao, org.seasar.doma.jdbc.ConfigProvider {

    static {
        org.seasar.doma.internal.Artifact.validateVersion("@VERSION@");
    }

    private static final java.lang.reflect.Method __method0 = org.seasar.doma.internal.jdbc.dao.DaoImplSupport.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.IncludeAndExcludeDao.class, "update", org.seasar.doma.internal.apt.processor.entity.Emp.class);

    private static final java.lang.reflect.Method __method1 = org.seasar.doma.internal.jdbc.dao.DaoImplSupport.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.IncludeAndExcludeDao.class, "update", org.seasar.doma.internal.apt.processor.entity.ImmutableUser.class);

    private final org.seasar.doma.internal.jdbc.dao.DaoImplSupport __support;

    /** */
    public IncludeAndExcludeDaoImpl() {
        __support = new org.seasar.doma.internal.jdbc.dao.DaoImplSupport(new org.seasar.doma.internal.apt.processor.dao.MyConfig());
    }

    /**
     * @param connection the connection
     */
    public IncludeAndExcludeDaoImpl(java.sql.Connection connection) {
        __support = new org.seasar.doma.internal.jdbc.dao.DaoImplSupport(new org.seasar.doma.internal.apt.processor.dao.MyConfig(), connection);
    }

    /**
     * @param dataSource the dataSource
     */
    public IncludeAndExcludeDaoImpl(javax.sql.DataSource dataSource) {
        __support = new org.seasar.doma.internal.jdbc.dao.DaoImplSupport(new org.seasar.doma.internal.apt.processor.dao.MyConfig(), dataSource);
    }

    /**
     * @param config the configuration
     */
    protected IncludeAndExcludeDaoImpl(org.seasar.doma.jdbc.Config config) {
        __support = new org.seasar.doma.internal.jdbc.dao.DaoImplSupport(config);
    }

    /**
     * @param config the configuration
     * @param connection the connection
     */
    protected IncludeAndExcludeDaoImpl(org.seasar.doma.jdbc.Config config, java.sql.Connection connection) {
        __support = new org.seasar.doma.internal.jdbc.dao.DaoImplSupport(config, connection);
    }

    /**
     * @param config the configuration
     * @param dataSource the dataSource
     */
    protected IncludeAndExcludeDaoImpl(org.seasar.doma.jdbc.Config config, javax.sql.DataSource dataSource) {
        __support = new org.seasar.doma.internal.jdbc.dao.DaoImplSupport(config, dataSource);
    }

    @Override
    public org.seasar.doma.jdbc.Config getConfig() {
        return __support.getConfig();
    }

    @Override
    public int update(org.seasar.doma.internal.apt.processor.entity.Emp emp) {
        __support.entering("org.seasar.doma.internal.apt.processor.dao.IncludeAndExcludeDaoImpl", "update", emp);
        try {
            if (emp == null) {
                throw new org.seasar.doma.DomaNullPointerException("emp");
            }
            org.seasar.doma.jdbc.query.AutoUpdateQuery<org.seasar.doma.internal.apt.processor.entity.Emp> __query = __support.getQueryImplementors().createAutoUpdateQuery(__method0, org.seasar.doma.internal.apt.processor.entity._Emp.getSingletonInternal());
            __query.setMethod(__method0);
            __query.setConfig(__support.getConfig());
            __query.setEntity(emp);
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.IncludeAndExcludeDaoImpl");
            __query.setCallerMethodName("update");
            __query.setQueryTimeout(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.setNullExcluded(false);
            __query.setVersionIgnored(false);
            __query.setIncludedPropertyNames("name", "salary");
            __query.setExcludedPropertyNames("salary");
            __query.setUnchangedPropertyIncluded(false);
            __query.setOptimisticLockExceptionSuppressed(false);
            __query.prepare();
            org.seasar.doma.jdbc.command.UpdateCommand __command = __support.getCommandImplementors().createUpdateCommand(__method0, __query);
            int __result = __command.execute();
            __query.complete();
            __support.exiting("org.seasar.doma.internal.apt.processor.dao.IncludeAndExcludeDaoImpl", "update", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            __support.throwing("org.seasar.doma.internal.apt.processor.dao.IncludeAndExcludeDaoImpl", "update", __e);
            throw __e;
        }
    }

    @Override
    public org.seasar.doma.jdbc.Result<org.seasar.doma.internal.apt.processor.entity.ImmutableUser> update(org.seasar.doma.internal.apt.processor.entity.ImmutableUser user) {
        __support.entering("org.seasar.doma.internal.apt.processor.dao.IncludeAndExcludeDaoImpl", "update", user);
        try {
            if (user == null) {
                throw new org.seasar.doma.DomaNullPointerException("user");
            }
            org.seasar.doma.jdbc.query.AutoUpdateQuery<org.seasar.doma.internal.apt.processor.entity.ImmutableUser> __query = __support.getQueryImplementors().createAutoUpdateQuery(__method1, org.seasar.doma.internal.apt.processor.entity._ImmutableUser.getSingletonInternal());
            __query.setMethod(__method1);
            __query.setConfig(__support.getConfig());
            __query.setEntity(user);
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.IncludeAndExcludeDaoImpl");
            __query.setCallerMethodName("update");
            __query.setQueryTimeout(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.setNullExcluded(false);
            __query.setVersionIgnored(false);
            __query.setIncludedPropertyNames("address.city");
            __query.setExcludedPropertyNames("address.street");
            __query.setUnchangedPropertyIncluded(false);
            __query.setOptimisticLockExceptionSuppressed(false);
            __query.prepare();
            org.seasar.doma.jdbc.command.UpdateCommand __command = __support.getCommandImplementors().createUpdateCommand(__method1, __query);
            int __count = __command.execute();
            __query.complete();
            org.seasar.doma.jdbc.Result<org.seasar.doma.internal.apt.processor.entity.ImmutableUser> __result = new org.seasar.doma.jdbc.Result<org.seasar.doma.internal.apt.processor.entity.ImmutableUser>(__count, __query.getEntity());
            __support.exiting("org.seasar.doma.internal.apt.processor.dao.IncludeAndExcludeDaoImpl", "update", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            __support.throwing("org.seasar.doma.internal.apt.processor.dao.IncludeAndExcludeDaoImpl", "update", __e);
            throw __e;
        }
    }

}
