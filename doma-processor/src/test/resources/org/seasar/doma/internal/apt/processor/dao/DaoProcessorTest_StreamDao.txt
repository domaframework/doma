package org.seasar.doma.internal.apt.processor.dao;

/** */
@javax.annotation.Generated(value = { "Doma", "@VERSION@" }, date = "1970-01-01T09:00:00.000+0900")
@org.seasar.doma.DaoImplementation
public class StreamDaoImpl implements org.seasar.doma.internal.apt.processor.dao.StreamDao, org.seasar.doma.jdbc.ConfigProvider {

    static {
        org.seasar.doma.internal.Artifact.validateVersion("@VERSION@");
    }

    private static final java.lang.reflect.Method __method0 = org.seasar.doma.internal.jdbc.dao.DaoImplSupport.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.StreamDao.class, "selectByIdAndName", java.lang.Integer.class, java.lang.String.class, java.util.function.Function.class);

    private static final java.lang.reflect.Method __method1 = org.seasar.doma.internal.jdbc.dao.DaoImplSupport.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.StreamDao.class, "selectById", java.lang.Integer.class, java.util.function.Function.class);

    private static final java.lang.reflect.Method __method2 = org.seasar.doma.internal.jdbc.dao.DaoImplSupport.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.StreamDao.class, "select", java.util.function.Function.class);

    private static final java.lang.reflect.Method __method3 = org.seasar.doma.internal.jdbc.dao.DaoImplSupport.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.StreamDao.class, "selectWithHogeFunction", org.seasar.doma.internal.apt.processor.dao.StreamDao.HogeFunction.class);

    private static final java.lang.reflect.Method __method4 = org.seasar.doma.internal.jdbc.dao.DaoImplSupport.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.StreamDao.class, "selectByIdAsMap", java.lang.Integer.class, java.util.function.Function.class);

    private final org.seasar.doma.internal.jdbc.dao.DaoImplSupport __support;

    /** */
    public StreamDaoImpl() {
        __support = new org.seasar.doma.internal.jdbc.dao.DaoImplSupport(new org.seasar.doma.internal.apt.processor.dao.MyConfig());
    }

    /**
     * @param connection the connection
     */
    public StreamDaoImpl(java.sql.Connection connection) {
        __support = new org.seasar.doma.internal.jdbc.dao.DaoImplSupport(new org.seasar.doma.internal.apt.processor.dao.MyConfig(), connection);
    }

    /**
     * @param dataSource the dataSource
     */
    public StreamDaoImpl(javax.sql.DataSource dataSource) {
        __support = new org.seasar.doma.internal.jdbc.dao.DaoImplSupport(new org.seasar.doma.internal.apt.processor.dao.MyConfig(), dataSource);
    }

    /**
     * @param config the configuration
     */
    protected StreamDaoImpl(org.seasar.doma.jdbc.Config config) {
        __support = new org.seasar.doma.internal.jdbc.dao.DaoImplSupport(config);
    }

    /**
     * @param config the configuration
     * @param connection the connection
     */
    protected StreamDaoImpl(org.seasar.doma.jdbc.Config config, java.sql.Connection connection) {
        __support = new org.seasar.doma.internal.jdbc.dao.DaoImplSupport(config, connection);
    }

    /**
     * @param config the configuration
     * @param dataSource the dataSource
     */
    protected StreamDaoImpl(org.seasar.doma.jdbc.Config config, javax.sql.DataSource dataSource) {
        __support = new org.seasar.doma.internal.jdbc.dao.DaoImplSupport(config, dataSource);
    }

    @Override
    public org.seasar.doma.jdbc.Config getConfig() {
        return __support.getConfig();
    }

    @Override
    public java.lang.Integer selectByIdAndName(java.lang.Integer id, java.lang.String name, java.util.function.Function<java.util.stream.Stream<org.seasar.doma.internal.apt.processor.entity.Emp>, java.lang.Integer> mapper) {
        __support.entering("org.seasar.doma.internal.apt.processor.dao.StreamDaoImpl", "selectByIdAndName", id, name, mapper);
        try {
            if (mapper == null) {
                throw new org.seasar.doma.DomaNullPointerException("mapper");
            }
            org.seasar.doma.jdbc.query.SqlFileSelectQuery __query = __support.getQueryImplementors().createSqlFileSelectQuery(__method0);
            __query.setMethod(__method0);
            __query.setConfig(__support.getConfig());
            __query.setSqlFilePath("META-INF/org/seasar/doma/internal/apt/processor/dao/StreamDao/selectByIdAndName.sql");
            __query.setEntityType(org.seasar.doma.internal.apt.processor.entity._Emp.getSingletonInternal());
            __query.addParameter("id", java.lang.Integer.class, id);
            __query.addParameter("name", java.lang.String.class, name);
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.StreamDaoImpl");
            __query.setCallerMethodName("selectByIdAndName");
            __query.setResultEnsured(false);
            __query.setResultMappingEnsured(false);
            __query.setFetchType(org.seasar.doma.FetchType.LAZY);
            __query.setQueryTimeout(-1);
            __query.setMaxRows(-1);
            __query.setFetchSize(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.prepare();
            org.seasar.doma.jdbc.command.SelectCommand<java.lang.Integer> __command = __support.getCommandImplementors().createSelectCommand(__method0, __query, new org.seasar.doma.internal.jdbc.command.EntityStreamHandler<org.seasar.doma.internal.apt.processor.entity.Emp, java.lang.Integer>(org.seasar.doma.internal.apt.processor.entity._Emp.getSingletonInternal(), mapper));
            java.lang.Integer __result = __command.execute();
            __query.complete();
            __support.exiting("org.seasar.doma.internal.apt.processor.dao.StreamDaoImpl", "selectByIdAndName", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            __support.throwing("org.seasar.doma.internal.apt.processor.dao.StreamDaoImpl", "selectByIdAndName", __e);
            throw __e;
        }
    }

    @Override
    public <R> R selectById(java.lang.Integer id, java.util.function.Function<java.util.stream.Stream<example.domain.PhoneNumber>, R> mapper) {
        __support.entering("org.seasar.doma.internal.apt.processor.dao.StreamDaoImpl", "selectById", id, mapper);
        try {
            if (mapper == null) {
                throw new org.seasar.doma.DomaNullPointerException("mapper");
            }
            org.seasar.doma.jdbc.query.SqlFileSelectQuery __query = __support.getQueryImplementors().createSqlFileSelectQuery(__method1);
            __query.setMethod(__method1);
            __query.setConfig(__support.getConfig());
            __query.setSqlFilePath("META-INF/org/seasar/doma/internal/apt/processor/dao/StreamDao/selectById.sql");
            __query.addParameter("id", java.lang.Integer.class, id);
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.StreamDaoImpl");
            __query.setCallerMethodName("selectById");
            __query.setResultEnsured(false);
            __query.setResultMappingEnsured(false);
            __query.setFetchType(org.seasar.doma.FetchType.LAZY);
            __query.setQueryTimeout(-1);
            __query.setMaxRows(-1);
            __query.setFetchSize(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.prepare();
            org.seasar.doma.jdbc.command.SelectCommand<R> __command = __support.getCommandImplementors().createSelectCommand(__method1, __query, new org.seasar.doma.internal.jdbc.command.DomainStreamHandler<java.lang.String, example.domain.PhoneNumber, R>(example.domain._PhoneNumber.getSingletonInternal(), mapper));
            R __result = __command.execute();
            __query.complete();
            __support.exiting("org.seasar.doma.internal.apt.processor.dao.StreamDaoImpl", "selectById", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            __support.throwing("org.seasar.doma.internal.apt.processor.dao.StreamDaoImpl", "selectById", __e);
            throw __e;
        }
    }

    @Override
    public <R extends java.lang.Number> R select(java.util.function.Function<java.util.stream.Stream<java.lang.String>, R> mapper) {
        __support.entering("org.seasar.doma.internal.apt.processor.dao.StreamDaoImpl", "select", mapper);
        try {
            if (mapper == null) {
                throw new org.seasar.doma.DomaNullPointerException("mapper");
            }
            org.seasar.doma.jdbc.query.SqlFileSelectQuery __query = __support.getQueryImplementors().createSqlFileSelectQuery(__method2);
            __query.setMethod(__method2);
            __query.setConfig(__support.getConfig());
            __query.setSqlFilePath("META-INF/org/seasar/doma/internal/apt/processor/dao/StreamDao/select.sql");
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.StreamDaoImpl");
            __query.setCallerMethodName("select");
            __query.setResultEnsured(false);
            __query.setResultMappingEnsured(false);
            __query.setFetchType(org.seasar.doma.FetchType.LAZY);
            __query.setQueryTimeout(-1);
            __query.setMaxRows(-1);
            __query.setFetchSize(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.prepare();
            org.seasar.doma.jdbc.command.SelectCommand<R> __command = __support.getCommandImplementors().createSelectCommand(__method2, __query, new org.seasar.doma.internal.jdbc.command.BasicStreamHandler<java.lang.String, R>(org.seasar.doma.internal.wrapper.WrapperSuppliers.ofString(), mapper));
            R __result = __command.execute();
            __query.complete();
            __support.exiting("org.seasar.doma.internal.apt.processor.dao.StreamDaoImpl", "select", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            __support.throwing("org.seasar.doma.internal.apt.processor.dao.StreamDaoImpl", "select", __e);
            throw __e;
        }
    }

    @Override
    public java.lang.String selectWithHogeFunction(org.seasar.doma.internal.apt.processor.dao.StreamDao.HogeFunction mapper) {
        __support.entering("org.seasar.doma.internal.apt.processor.dao.StreamDaoImpl", "selectWithHogeFunction", mapper);
        try {
            if (mapper == null) {
                throw new org.seasar.doma.DomaNullPointerException("mapper");
            }
            org.seasar.doma.jdbc.query.SqlFileSelectQuery __query = __support.getQueryImplementors().createSqlFileSelectQuery(__method3);
            __query.setMethod(__method3);
            __query.setConfig(__support.getConfig());
            __query.setSqlFilePath("META-INF/org/seasar/doma/internal/apt/processor/dao/StreamDao/selectWithHogeFunction.sql");
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.StreamDaoImpl");
            __query.setCallerMethodName("selectWithHogeFunction");
            __query.setResultEnsured(false);
            __query.setResultMappingEnsured(false);
            __query.setFetchType(org.seasar.doma.FetchType.LAZY);
            __query.setQueryTimeout(-1);
            __query.setMaxRows(-1);
            __query.setFetchSize(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.prepare();
            org.seasar.doma.jdbc.command.SelectCommand<java.lang.String> __command = __support.getCommandImplementors().createSelectCommand(__method3, __query, new org.seasar.doma.internal.jdbc.command.BasicStreamHandler<java.lang.String, java.lang.String>(org.seasar.doma.internal.wrapper.WrapperSuppliers.ofString(), mapper));
            java.lang.String __result = __command.execute();
            __query.complete();
            __support.exiting("org.seasar.doma.internal.apt.processor.dao.StreamDaoImpl", "selectWithHogeFunction", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            __support.throwing("org.seasar.doma.internal.apt.processor.dao.StreamDaoImpl", "selectWithHogeFunction", __e);
            throw __e;
        }
    }

    @Override
    public <R> R selectByIdAsMap(java.lang.Integer id, java.util.function.Function<java.util.stream.Stream<java.util.Map<java.lang.String, java.lang.Object>>, R> callback) {
        __support.entering("org.seasar.doma.internal.apt.processor.dao.StreamDaoImpl", "selectByIdAsMap", id, callback);
        try {
            if (callback == null) {
                throw new org.seasar.doma.DomaNullPointerException("callback");
            }
            org.seasar.doma.jdbc.query.SqlFileSelectQuery __query = __support.getQueryImplementors().createSqlFileSelectQuery(__method4);
            __query.setMethod(__method4);
            __query.setConfig(__support.getConfig());
            __query.setSqlFilePath("META-INF/org/seasar/doma/internal/apt/processor/dao/StreamDao/selectByIdAsMap.sql");
            __query.addParameter("id", java.lang.Integer.class, id);
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.StreamDaoImpl");
            __query.setCallerMethodName("selectByIdAsMap");
            __query.setResultEnsured(false);
            __query.setResultMappingEnsured(false);
            __query.setFetchType(org.seasar.doma.FetchType.LAZY);
            __query.setQueryTimeout(-1);
            __query.setMaxRows(-1);
            __query.setFetchSize(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.prepare();
            org.seasar.doma.jdbc.command.SelectCommand<R> __command = __support.getCommandImplementors().createSelectCommand(__method4, __query, new org.seasar.doma.internal.jdbc.command.MapStreamHandler<R>(org.seasar.doma.MapKeyNamingType.CAMEL_CASE, callback));
            R __result = __command.execute();
            __query.complete();
            __support.exiting("org.seasar.doma.internal.apt.processor.dao.StreamDaoImpl", "selectByIdAsMap", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            __support.throwing("org.seasar.doma.internal.apt.processor.dao.StreamDaoImpl", "selectByIdAsMap", __e);
            throw __e;
        }
    }

}
