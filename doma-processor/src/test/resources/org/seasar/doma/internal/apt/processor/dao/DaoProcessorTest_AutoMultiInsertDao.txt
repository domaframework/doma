package org.seasar.doma.internal.apt.processor.dao;

/** */
@javax.annotation.Generated(value = { "Doma", "@VERSION@" }, date = "1970-01-01T09:00:00.000+0900")
@org.seasar.doma.DaoImplementation
public class AutoMultiInsertDaoImpl implements org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDao, org.seasar.doma.jdbc.ConfigProvider {

    static {
        org.seasar.doma.internal.Artifact.validateVersion("@VERSION@");
    }

    private static final java.lang.reflect.Method __method0 = org.seasar.doma.internal.jdbc.dao.DaoImplSupport.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDao.class, "insert", java.util.List.class);

    private static final java.lang.reflect.Method __method1 = org.seasar.doma.internal.jdbc.dao.DaoImplSupport.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDao.class, "insertWithExclude", java.util.List.class);

    private static final java.lang.reflect.Method __method2 = org.seasar.doma.internal.jdbc.dao.DaoImplSupport.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDao.class, "insertWithInclude", java.util.List.class);

    private static final java.lang.reflect.Method __method3 = org.seasar.doma.internal.jdbc.dao.DaoImplSupport.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDao.class, "insertWithDuplicateKeys", java.util.List.class);

    private static final java.lang.reflect.Method __method4 = org.seasar.doma.internal.jdbc.dao.DaoImplSupport.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDao.class, "insertWithQueryTimeout", java.util.List.class);

    private static final java.lang.reflect.Method __method5 = org.seasar.doma.internal.jdbc.dao.DaoImplSupport.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDao.class, "insertWithSqlLog", java.util.List.class);

    private static final java.lang.reflect.Method __method6 = org.seasar.doma.internal.jdbc.dao.DaoImplSupport.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDao.class, "insertDuplicateKeyIgnore", java.util.List.class);

    private static final java.lang.reflect.Method __method7 = org.seasar.doma.internal.jdbc.dao.DaoImplSupport.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDao.class, "insertDuplicateKeyUpdate", java.util.List.class);

    private static final java.lang.reflect.Method __method8 = org.seasar.doma.internal.jdbc.dao.DaoImplSupport.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDao.class, "insertDuplicateKeyException", java.util.List.class);

    private static final java.lang.reflect.Method __method9 = org.seasar.doma.internal.jdbc.dao.DaoImplSupport.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDao.class, "insertImmutableEntities", java.util.List.class);

    private final org.seasar.doma.internal.jdbc.dao.DaoImplSupport __support;

    /** */
    public AutoMultiInsertDaoImpl() {
        __support = new org.seasar.doma.internal.jdbc.dao.DaoImplSupport(new org.seasar.doma.internal.apt.processor.dao.MyConfig());
    }

    /**
     * @param connection the connection
     */
    public AutoMultiInsertDaoImpl(java.sql.Connection connection) {
        __support = new org.seasar.doma.internal.jdbc.dao.DaoImplSupport(new org.seasar.doma.internal.apt.processor.dao.MyConfig(), connection);
    }

    /**
     * @param dataSource the dataSource
     */
    public AutoMultiInsertDaoImpl(javax.sql.DataSource dataSource) {
        __support = new org.seasar.doma.internal.jdbc.dao.DaoImplSupport(new org.seasar.doma.internal.apt.processor.dao.MyConfig(), dataSource);
    }

    /**
     * @param config the configuration
     */
    protected AutoMultiInsertDaoImpl(org.seasar.doma.jdbc.Config config) {
        __support = new org.seasar.doma.internal.jdbc.dao.DaoImplSupport(config);
    }

    /**
     * @param config the configuration
     * @param connection the connection
     */
    protected AutoMultiInsertDaoImpl(org.seasar.doma.jdbc.Config config, java.sql.Connection connection) {
        __support = new org.seasar.doma.internal.jdbc.dao.DaoImplSupport(config, connection);
    }

    /**
     * @param config the configuration
     * @param dataSource the dataSource
     */
    protected AutoMultiInsertDaoImpl(org.seasar.doma.jdbc.Config config, javax.sql.DataSource dataSource) {
        __support = new org.seasar.doma.internal.jdbc.dao.DaoImplSupport(config, dataSource);
    }

    @Override
    public org.seasar.doma.jdbc.Config getConfig() {
        return __support.getConfig();
    }

    @Override
    public int insert(java.util.List<org.seasar.doma.internal.apt.processor.entity.Emp> entities) {
        __support.entering("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insert", entities);
        try {
            if (entities == null) {
                throw new org.seasar.doma.DomaNullPointerException("entities");
            }
            org.seasar.doma.jdbc.query.AutoMultiInsertQuery<org.seasar.doma.internal.apt.processor.entity.Emp> __query = __support.getQueryImplementors().createAutoMultiInsertQuery(__method0, org.seasar.doma.internal.apt.processor.entity._Emp.getSingletonInternal());
            __query.setMethod(__method0);
            __query.setConfig(__support.getConfig());
            __query.setDuplicateKeyType(org.seasar.doma.jdbc.query.DuplicateKeyType.EXCEPTION);
            __query.setEntities(entities);
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl");
            __query.setCallerMethodName("insert");
            __query.setQueryTimeout(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.setIncludedPropertyNames();
            __query.setExcludedPropertyNames();
            __query.setDuplicateKeyNames();
            __query.prepare();
            org.seasar.doma.jdbc.command.InsertCommand __command = __support.getCommandImplementors().createInsertCommand(__method0, __query);
            int __result = __command.execute();
            __query.complete();
            __support.exiting("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insert", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            __support.throwing("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insert", __e);
            throw __e;
        }
    }

    @Override
    public int insertWithExclude(java.util.List<org.seasar.doma.internal.apt.processor.entity.Emp> entities) {
        __support.entering("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insertWithExclude", entities);
        try {
            if (entities == null) {
                throw new org.seasar.doma.DomaNullPointerException("entities");
            }
            org.seasar.doma.jdbc.query.AutoMultiInsertQuery<org.seasar.doma.internal.apt.processor.entity.Emp> __query = __support.getQueryImplementors().createAutoMultiInsertQuery(__method1, org.seasar.doma.internal.apt.processor.entity._Emp.getSingletonInternal());
            __query.setMethod(__method1);
            __query.setConfig(__support.getConfig());
            __query.setDuplicateKeyType(org.seasar.doma.jdbc.query.DuplicateKeyType.EXCEPTION);
            __query.setEntities(entities);
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl");
            __query.setCallerMethodName("insertWithExclude");
            __query.setQueryTimeout(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.setIncludedPropertyNames();
            __query.setExcludedPropertyNames("name");
            __query.setDuplicateKeyNames();
            __query.prepare();
            org.seasar.doma.jdbc.command.InsertCommand __command = __support.getCommandImplementors().createInsertCommand(__method1, __query);
            int __result = __command.execute();
            __query.complete();
            __support.exiting("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insertWithExclude", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            __support.throwing("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insertWithExclude", __e);
            throw __e;
        }
    }

    @Override
    public int insertWithInclude(java.util.List<org.seasar.doma.internal.apt.processor.entity.Emp> entities) {
        __support.entering("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insertWithInclude", entities);
        try {
            if (entities == null) {
                throw new org.seasar.doma.DomaNullPointerException("entities");
            }
            org.seasar.doma.jdbc.query.AutoMultiInsertQuery<org.seasar.doma.internal.apt.processor.entity.Emp> __query = __support.getQueryImplementors().createAutoMultiInsertQuery(__method2, org.seasar.doma.internal.apt.processor.entity._Emp.getSingletonInternal());
            __query.setMethod(__method2);
            __query.setConfig(__support.getConfig());
            __query.setDuplicateKeyType(org.seasar.doma.jdbc.query.DuplicateKeyType.EXCEPTION);
            __query.setEntities(entities);
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl");
            __query.setCallerMethodName("insertWithInclude");
            __query.setQueryTimeout(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.setIncludedPropertyNames();
            __query.setExcludedPropertyNames("salary");
            __query.setDuplicateKeyNames();
            __query.prepare();
            org.seasar.doma.jdbc.command.InsertCommand __command = __support.getCommandImplementors().createInsertCommand(__method2, __query);
            int __result = __command.execute();
            __query.complete();
            __support.exiting("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insertWithInclude", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            __support.throwing("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insertWithInclude", __e);
            throw __e;
        }
    }

    @Override
    public int insertWithDuplicateKeys(java.util.List<org.seasar.doma.internal.apt.processor.entity.Emp> entities) {
        __support.entering("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insertWithDuplicateKeys", entities);
        try {
            if (entities == null) {
                throw new org.seasar.doma.DomaNullPointerException("entities");
            }
            org.seasar.doma.jdbc.query.AutoMultiInsertQuery<org.seasar.doma.internal.apt.processor.entity.Emp> __query = __support.getQueryImplementors().createAutoMultiInsertQuery(__method3, org.seasar.doma.internal.apt.processor.entity._Emp.getSingletonInternal());
            __query.setMethod(__method3);
            __query.setConfig(__support.getConfig());
            __query.setDuplicateKeyType(org.seasar.doma.jdbc.query.DuplicateKeyType.UPDATE);
            __query.setEntities(entities);
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl");
            __query.setCallerMethodName("insertWithDuplicateKeys");
            __query.setQueryTimeout(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.setIncludedPropertyNames();
            __query.setExcludedPropertyNames();
            __query.setDuplicateKeyNames("name", "salary");
            __query.prepare();
            org.seasar.doma.jdbc.command.InsertCommand __command = __support.getCommandImplementors().createInsertCommand(__method3, __query);
            int __result = __command.execute();
            __query.complete();
            __support.exiting("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insertWithDuplicateKeys", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            __support.throwing("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insertWithDuplicateKeys", __e);
            throw __e;
        }
    }

    @Override
    public int insertWithQueryTimeout(java.util.List<org.seasar.doma.internal.apt.processor.entity.Emp> entities) {
        __support.entering("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insertWithQueryTimeout", entities);
        try {
            if (entities == null) {
                throw new org.seasar.doma.DomaNullPointerException("entities");
            }
            org.seasar.doma.jdbc.query.AutoMultiInsertQuery<org.seasar.doma.internal.apt.processor.entity.Emp> __query = __support.getQueryImplementors().createAutoMultiInsertQuery(__method4, org.seasar.doma.internal.apt.processor.entity._Emp.getSingletonInternal());
            __query.setMethod(__method4);
            __query.setConfig(__support.getConfig());
            __query.setDuplicateKeyType(org.seasar.doma.jdbc.query.DuplicateKeyType.EXCEPTION);
            __query.setEntities(entities);
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl");
            __query.setCallerMethodName("insertWithQueryTimeout");
            __query.setQueryTimeout(10);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.setIncludedPropertyNames();
            __query.setExcludedPropertyNames();
            __query.setDuplicateKeyNames();
            __query.prepare();
            org.seasar.doma.jdbc.command.InsertCommand __command = __support.getCommandImplementors().createInsertCommand(__method4, __query);
            int __result = __command.execute();
            __query.complete();
            __support.exiting("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insertWithQueryTimeout", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            __support.throwing("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insertWithQueryTimeout", __e);
            throw __e;
        }
    }

    @Override
    public int insertWithSqlLog(java.util.List<org.seasar.doma.internal.apt.processor.entity.Emp> entities) {
        __support.entering("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insertWithSqlLog", entities);
        try {
            if (entities == null) {
                throw new org.seasar.doma.DomaNullPointerException("entities");
            }
            org.seasar.doma.jdbc.query.AutoMultiInsertQuery<org.seasar.doma.internal.apt.processor.entity.Emp> __query = __support.getQueryImplementors().createAutoMultiInsertQuery(__method5, org.seasar.doma.internal.apt.processor.entity._Emp.getSingletonInternal());
            __query.setMethod(__method5);
            __query.setConfig(__support.getConfig());
            __query.setDuplicateKeyType(org.seasar.doma.jdbc.query.DuplicateKeyType.EXCEPTION);
            __query.setEntities(entities);
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl");
            __query.setCallerMethodName("insertWithSqlLog");
            __query.setQueryTimeout(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.NONE);
            __query.setIncludedPropertyNames();
            __query.setExcludedPropertyNames();
            __query.setDuplicateKeyNames();
            __query.prepare();
            org.seasar.doma.jdbc.command.InsertCommand __command = __support.getCommandImplementors().createInsertCommand(__method5, __query);
            int __result = __command.execute();
            __query.complete();
            __support.exiting("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insertWithSqlLog", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            __support.throwing("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insertWithSqlLog", __e);
            throw __e;
        }
    }

    @Override
    public int insertDuplicateKeyIgnore(java.util.List<org.seasar.doma.internal.apt.processor.entity.Emp> entities) {
        __support.entering("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insertDuplicateKeyIgnore", entities);
        try {
            if (entities == null) {
                throw new org.seasar.doma.DomaNullPointerException("entities");
            }
            org.seasar.doma.jdbc.query.AutoMultiInsertQuery<org.seasar.doma.internal.apt.processor.entity.Emp> __query = __support.getQueryImplementors().createAutoMultiInsertQuery(__method6, org.seasar.doma.internal.apt.processor.entity._Emp.getSingletonInternal());
            __query.setMethod(__method6);
            __query.setConfig(__support.getConfig());
            __query.setDuplicateKeyType(org.seasar.doma.jdbc.query.DuplicateKeyType.IGNORE);
            __query.setEntities(entities);
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl");
            __query.setCallerMethodName("insertDuplicateKeyIgnore");
            __query.setQueryTimeout(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.setIncludedPropertyNames();
            __query.setExcludedPropertyNames();
            __query.setDuplicateKeyNames();
            __query.prepare();
            org.seasar.doma.jdbc.command.InsertCommand __command = __support.getCommandImplementors().createInsertCommand(__method6, __query);
            int __result = __command.execute();
            __query.complete();
            __support.exiting("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insertDuplicateKeyIgnore", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            __support.throwing("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insertDuplicateKeyIgnore", __e);
            throw __e;
        }
    }

    @Override
    public int insertDuplicateKeyUpdate(java.util.List<org.seasar.doma.internal.apt.processor.entity.Emp> entities) {
        __support.entering("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insertDuplicateKeyUpdate", entities);
        try {
            if (entities == null) {
                throw new org.seasar.doma.DomaNullPointerException("entities");
            }
            org.seasar.doma.jdbc.query.AutoMultiInsertQuery<org.seasar.doma.internal.apt.processor.entity.Emp> __query = __support.getQueryImplementors().createAutoMultiInsertQuery(__method7, org.seasar.doma.internal.apt.processor.entity._Emp.getSingletonInternal());
            __query.setMethod(__method7);
            __query.setConfig(__support.getConfig());
            __query.setDuplicateKeyType(org.seasar.doma.jdbc.query.DuplicateKeyType.UPDATE);
            __query.setEntities(entities);
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl");
            __query.setCallerMethodName("insertDuplicateKeyUpdate");
            __query.setQueryTimeout(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.setIncludedPropertyNames();
            __query.setExcludedPropertyNames();
            __query.setDuplicateKeyNames();
            __query.prepare();
            org.seasar.doma.jdbc.command.InsertCommand __command = __support.getCommandImplementors().createInsertCommand(__method7, __query);
            int __result = __command.execute();
            __query.complete();
            __support.exiting("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insertDuplicateKeyUpdate", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            __support.throwing("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insertDuplicateKeyUpdate", __e);
            throw __e;
        }
    }

    @Override
    public int insertDuplicateKeyException(java.util.List<org.seasar.doma.internal.apt.processor.entity.Emp> entities) {
        __support.entering("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insertDuplicateKeyException", entities);
        try {
            if (entities == null) {
                throw new org.seasar.doma.DomaNullPointerException("entities");
            }
            org.seasar.doma.jdbc.query.AutoMultiInsertQuery<org.seasar.doma.internal.apt.processor.entity.Emp> __query = __support.getQueryImplementors().createAutoMultiInsertQuery(__method8, org.seasar.doma.internal.apt.processor.entity._Emp.getSingletonInternal());
            __query.setMethod(__method8);
            __query.setConfig(__support.getConfig());
            __query.setDuplicateKeyType(org.seasar.doma.jdbc.query.DuplicateKeyType.EXCEPTION);
            __query.setEntities(entities);
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl");
            __query.setCallerMethodName("insertDuplicateKeyException");
            __query.setQueryTimeout(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.setIncludedPropertyNames();
            __query.setExcludedPropertyNames();
            __query.setDuplicateKeyNames();
            __query.prepare();
            org.seasar.doma.jdbc.command.InsertCommand __command = __support.getCommandImplementors().createInsertCommand(__method8, __query);
            int __result = __command.execute();
            __query.complete();
            __support.exiting("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insertDuplicateKeyException", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            __support.throwing("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insertDuplicateKeyException", __e);
            throw __e;
        }
    }

    @Override
    public org.seasar.doma.jdbc.MultiResult<org.seasar.doma.internal.apt.processor.entity.ImmutableEmp> insertImmutableEntities(java.util.List<org.seasar.doma.internal.apt.processor.entity.ImmutableEmp> entities) {
        __support.entering("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insertImmutableEntities", entities);
        try {
            if (entities == null) {
                throw new org.seasar.doma.DomaNullPointerException("entities");
            }
            org.seasar.doma.jdbc.query.AutoMultiInsertQuery<org.seasar.doma.internal.apt.processor.entity.ImmutableEmp> __query = __support.getQueryImplementors().createAutoMultiInsertQuery(__method9, org.seasar.doma.internal.apt.processor.entity._ImmutableEmp.getSingletonInternal());
            __query.setMethod(__method9);
            __query.setConfig(__support.getConfig());
            __query.setDuplicateKeyType(org.seasar.doma.jdbc.query.DuplicateKeyType.EXCEPTION);
            __query.setEntities(entities);
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl");
            __query.setCallerMethodName("insertImmutableEntities");
            __query.setQueryTimeout(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.setIncludedPropertyNames();
            __query.setExcludedPropertyNames();
            __query.setDuplicateKeyNames();
            __query.prepare();
            org.seasar.doma.jdbc.command.InsertCommand __command = __support.getCommandImplementors().createInsertCommand(__method9, __query);
            int __count = __command.execute();
            __query.complete();
            org.seasar.doma.jdbc.MultiResult<org.seasar.doma.internal.apt.processor.entity.ImmutableEmp> __result = new org.seasar.doma.jdbc.MultiResult<org.seasar.doma.internal.apt.processor.entity.ImmutableEmp>(__count, __query.getEntities());
            __support.exiting("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insertImmutableEntities", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            __support.throwing("org.seasar.doma.internal.apt.processor.dao.AutoMultiInsertDaoImpl", "insertImmutableEntities", __e);
            throw __e;
        }
    }

}
