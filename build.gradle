plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'com.diffplug.eclipse.apt' version '3.22.0'
    id 'com.diffplug.gradle.spotless' version '3.27.2'
    id "net.researchgate.release" version '2.8.1'
}

def encoding = 'UTF-8'

def replaceVersion = tasks.register('replaceVersion') {
    mustRunAfter(updateVersion)
    doLast {
        ant.replaceregexp(
                match: /(private static final String VERSION = ")[^"]*(")/,
                replace: "\\1${version}\\2",
                encoding: encoding,
                flags: 'g') {
            fileset(dir: '.') {
                include(name: '**/Artifact.java')
            }
        }
        ant.replaceregexp(
                match: /("org.seasar.doma:doma:)[^"]*(")/,
                replace: "\\1${version}\\2",
                encoding: encoding,
                flags: 'g') {
            fileset(dir: 'docs') {
                include(name: '**/*.rst')
            }
        }
    }
}

spotless {
    java {
        googleJavaFormat('1.7')
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withJavadocJar()
    withSourcesJar()
}

compileJava {
    dependsOn replaceVersion
    options.encoding = encoding
}

compileTestJava {
    options.encoding = encoding
    options.compilerArgs = ['-proc:none']
}

test {
    maxHeapSize = '1g'
    useJUnitPlatform()
}

javadoc {
    options.encoding = encoding
    options.charSet = encoding
    options.docEncoding = encoding
    options.links 'https://docs.oracle.com/javase/jp/8/docs/api/'
    options.use = true
    exclude '**/internal/**'
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Doma', 'Implementation-Version': archiveVersion
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.0'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = group
            artifactId = project.name
            version = version
            from components.java

            pom {
                name = project.name
                description = 'DAO Oriented Database Mapping Framework for Java 8+'
                url = projectUrl
                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'nakamura-to'
                        name = 'Toshihiro Nakamura'
                        email = 'toshihiro.nakamura@gmail.com'
                    }
                }
                scm {
                    connection = "scm:git:${githubUrl}"
                    developerConnection = "scm:git:${githubUrl}"
                    url = projectUrl
                }
            }
            repositories {
                maven {
                    url = version.endsWith("SNAPSHOT") ? sonatypeSnapshotUrl : sonatypeUrl
                    credentials {
                        username = sonatypeUsername
                        password = sonatypePassword
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

build {
    dependsOn publishToMavenLocal
}

release {
    newVersionCommitMessage = '[Gradle Release Plugin] - [skip ci] new version commit: '
    pushReleaseVersionBranch = 'release'
    git {
        requireBranch = 'working'
    }
}

commitNewVersion {
    dependsOn replaceVersion
}

eclipse {
    classpath {
        file {
            whenMerged { classpath ->
                classpath.entries.removeAll { it.path == '.apt_generated' }
            }
            withXml { provider ->
                def node = provider.asNode()
                node.appendNode( 'classpathentry', [ kind: 'src', output: 'bin/main', path: '.apt_generated'])
            }
        }
    }
    jdt {
        javaRuntimeName = 'JavaSE-1.8'
    }
}
